// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/09/2025 23:48:53"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    cpu_test_sim
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module cpu_test_sim_vlg_vec_tst();
// constants                                           
// general purpose registers
reg cpuClk;
reg memClk;
reg rst;
// wires                                               
wire [5:0] addrOut;
wire en_mem;
wire [31:0] memDataIn;
wire [31:0] memDataOut;
wire [31:0] outA;
wire [31:0] outB;
wire outC;
wire [31:0] outIR;
wire [31:0] outPC;
wire outZ;
wire [2:0] T_Info;
wire wEn;
wire wen_mem;

// assign statements (if any)                          
cpu_test_sim i1 (
// port map - connection between master ports and signals/registers   
	.addrOut(addrOut),
	.cpuClk(cpuClk),
	.en_mem(en_mem),
	.memClk(memClk),
	.memDataIn(memDataIn),
	.memDataOut(memDataOut),
	.outA(outA),
	.outB(outB),
	.outC(outC),
	.outIR(outIR),
	.outPC(outPC),
	.outZ(outZ),
	.rst(rst),
	.T_Info(T_Info),
	.wEn(wEn),
	.wen_mem(wen_mem)
);
initial 
begin 
#500000 $finish;
end 
initial 
begin 
#500000 $finish;
end 
endmodule

